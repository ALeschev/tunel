#!/bin/bash

MODE=$1
PARAM0=$2
PARAM1=$3
PARAM2=$4

SMG1016_FS_PATH="../../env/smg-env/smg1016/filesystem/initrd_update/sip/fs/"
SMG1016M_FS_PATH="../../env/smg-env/smg1016m/filesystem/initrd_update/sip/fs/"
SMG1016M_FS_PATH2="../../env/smg-env/smg1016m/filesystem/initrd_update/sbc/fs/"
SMG2016_FS_PATH="../../env/smg-env/smg2016/filesystem/initrd_update/sip/fs/"
SMG2016_FS_PATH2="../../env/smg-env/smg1016m/filesystem/initrd_update/sbc/fs/"

J8="-j8"

BUILDF="../buildcnt.h"

FLAGS=
CLEAN=
BINFILE=ivr
COPY=0
COPY_PATH=$SMG1016M_FS_PATH
COPY_PATH2=$SMG1016M_FS_PATH2
TFTP_PATH=/tftpboot/smg1016m/

check_mode()
{
case "$MODE" in
    "mv" )
        CC_LOC="CROSS_COMPILE=arm-mv5sft-linux-gnueabi-"
        ARCH_LOC="ARCH=mv"
        COPY_PATH=$SMG1016M_FS_PATH
        COPY_PATH2=$SMG1016M_FS_PATH2
        TFTP_PATH=/tftpboot/smg1016m/
        ;;
    "2016" )
        CC_LOC="CROSS_COMPILE=arm-marvell-linux-gnueabi-"
        ARCH_LOC="ARCH=2016"
        COPY_PATH=$SMG2016_FS_PATH
        COPY_PATH2=$SMG2016_FS_PATH2
        TFTP_PATH=/tftpboot/smg2016/
        ;;
    "ppc" )
        CC_LOC="CROSS_COMPILE=ppc_4xxFP-"
        ARCH_LOC="ARCH=ppc"
        COPY_PATH=$SMG1016_FS_PATH
        COPY_PATH2=""
        TFTP_PATH=/tftpboot/smg1016/
        ;;
    * )
        echo "Arch not set! Using 'mv' as default!"
        CC_LOC="CROSS_COMPILE=arm-mv5sft-linux-gnueabi-"
        ARCH_LOC="ARCH=mv"
        PARAM2=$PARAM1
        PARAM1=$PARAM0
        PARAM0=$MODE
        MODE="mv"
        ;;
esac
}


check_param()
{
PARAM=$1

case "$PARAM" in
    "cleanall" )
                CLEAN="clean"
                J8="" ;;
    "clean" )
                CLEAN="clean" ;;
    "CGATE" )
                FLAGS="CGATE_MODE=y "
                COPY_PATH=$SMG1016M_FS_PATH_CGATE
                TFTP_PATH=/tftpboot/smg1016m/cgate/
                ;;
    "v52"   )
                FLAGS="USE_V52=y " ;;
    "copy"  )
                COPY=1 ;;
esac
}

check_mode

echo "params: 0: $PARAM0, 1: $PARAM1, 2: $PARAM2"

[ -n "$PARAM0" ] && check_param $PARAM0
[ -n "$PARAM1" ] && check_param $PARAM1
[ -n "$PARAM2" ] && check_param $PARAM2

export "$CC_LOC"
export "$ARCH_LOC"
BIN=${MODE}/$BINFILE

if [ -n "$CLEAN" ]; then
    echo "clearing"
    make $CLEAN $CC_LOC
fi;

if [ -n "$FLAGS" ];
then
    echo "try 'make $CC_LOC $ARCH_LOC $FLAGS'"
    make $J8 $CC_LOC $ARCH_LOC $FLAGS
else
    echo "try 'make $CC_LOC $ARCH_LOC'"
    make $J8 $CC_LOC $ARCH_LOC
fi;


copy_binary()
{
    DST_NAME=$1
    DST_PATH=$2

    if [ -z "$DST_PATH" ]; then
        echo "$DST_NAME not specified"
    elif [ ! -d "$DST_PATH" ]; then
        echo "$DST_NAME ($DST_PATH) not exists"
    else
        echo "copy '$BIN' into '$DST_PATH'"
        cp -v $BIN $DST_PATH
    fi
}

[ $COPY -eq 1 ] && copy_binary "TFTP_PATH" "$TFTP_PATH"
copy_binary "COPY_PATH" "$COPY_PATH"
copy_binary "COPY_PATH2" "$COPY_PATH2"

exit 0;
