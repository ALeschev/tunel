#ifndef MEDIATOR_H
#define MEDIATOR_H

#include "knot.h"
#include "print.h"

// это интересная штука, которую он требует, если ты хочешь нормальную оценку
// знакомься, это паттерн. Он так и называется Mediator, в инете куча инфы

// конкретно, как это сделанно у меня, у тебя точнее :D 
/*												Штука которая
	наше поле			Mediator 				печатает наше поле
	+--------+			+-------+			   +-------+
	|  Knot  | <------- | *Knot |		+----> | Print |
	+--------+			+-------+		|	   +-------+
						| *Print| ------+
						+-------+
*/
// т.е. получается что, Медиатор хварит в себе указатели на поле и класс, который выводит это поле на экран
// т.е. он связывает их. Получается очень удобная вещ, поле и вся логика программы у нас отдельно,
// визуализация отдельно, т.е при желании можно переписать Print так, что будет все рисоваться 
// не в консоли, а в крутой графической штуке. 

// Запомни, он будет спрашивать. Данные и логика у нас отдельно, визуализация отдельно. 
// А через Медиатор они связываются и взаимодействуют						

class Mediator
{
public:
	Mediator(Knot *, Print *);
	void ViewField();
private:
	Knot *_field;
	Print *_viewer;
};

#endif
